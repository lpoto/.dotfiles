#!/bin/sh
#
# this script will start neovim built in the .build directory.
# If it is not found, it will ask if you want to build it, and then
# build it from source.
#
# This will modify thje XDG environment variables for the neovim's
# runtime, so all the configs, plugins and logs will be stored
# in the nvim config directory, instead of saving data all over the
# machine.

nvim_config_path=$(dirname $(dirname "$0"))
nvim_bin_path=${nvim_config_path}/.build/neovim/build/bin/nvim

if [ ! -f "${nvim_bin_path}" ]; then
  # neovim installation not found, ask whether
  # to build it from source, as the neovim config
  # requires latest neovim version
  echo "Neovim not found at ${nvim_bin_path}"
  read -p "Build it from source? [Y/N] " REPLY
  echo

  if [ "$REPLY" != "y" ] && [ "$REPLY" != "Y" ]; then
    echo "Not building neovim, exiting ..."
    exit
  fi
  echo "==> building neovim ..."
  echo
  ${nvim_config_path}/scripts/build
  echo
  echo "==> opening neovim ..."
  sleep 3
fi

NVIM_APPNAME="/" # this way neovim won't create additional nvim folders
NVIM_CONFIG_HOME=${nvim_config_path}
# group all the neovim data in the same .storage folder
NVIM_DATA_HOME=${nvim_config_path}/.storage/share
NVIM_RUNTIME_DIR=${nvim_config_path}/.storage/state
NVIM_STATE_HOME=${nvim_config_path}/.storage/state

nvim_config_path_bin="${nvim_config_path}/bin"
PATH="${nvim_config_path_bin}:${PATH}"

XDG_CONFIG_HOME=${NVIM_CONFIG_HOME} \
  XDG_DATA_HOME=${NVIM_DATA_HOME} \
  XDG_RUNTIME_DIR=${NVIM_RUNTIME_DIR} \
  XDG_STATE_HOME=${NVIM_STATE_HOME} \
  NVIM_APPNAME=${NVIM_APPNAME} \
  PATH=${PATH} \
  ${nvim_bin_path} $@
